<Activity mc:Ignorable="sap sap2010" x:Class="엑셀_제어" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="803.2,801.6" sap2010:WorkflowViewState.IdRef="엑셀_제어_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="엑셀_제어" sap:VirtualizedContainerService.HintSize="813.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">40,2.4</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <x:Double x:Key="Width">780</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">70,77.6 70,414.4 670,414.4 670,384.4</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart.StartNode>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">150,115.6</av:Point>
          <av:Size x:Key="ShapeSize">200,144.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="가장 간단하고 짧음&#xA;엑셀 어플 스코프에서&#xA;Read Range와&#xA;Write Range만 사용" DisplayName="Excle 스코프만 사용" sap:VirtualizedContainerService.HintSize="200,144.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="DT1" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="433.6,390.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="Sample_data\Sample Columns.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="375.2,280.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[DT1]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ExcelWriteCell Cell="[&quot;C1:C&quot;+DT1.Rows.Count.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="=SUM(A1:B1)" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">360,115.6</av:Point>
          <av:Size x:Key="ShapeSize">200,128.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="DataTable로 읽어와서&#xA;ForEach문 사용&#xA;Write Cell로 열 추가" DisplayName="DataTable로 읽고 출력" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="500,798.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="Sample_data\Sample Columns.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="실행" sap:VirtualizedContainerService.HintSize="466.4,688.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="DT2" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="&quot;A:B&quot; 입력시 공백도 범위에 포함되어 에러발생&#xA;&#xA;&quot;&quot; 입력시 공백이 아닌 레이어 들고와짐" DataTable="[DT2]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="424.8,120" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sheet1">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="C" DataTable="[DT2]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="424.8,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT2]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="424.8,373.6" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,224.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="ui:GenericValue" Name="v1" />
                          <Variable x:TypeArguments="ui:GenericValue" Name="v2" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="변수처리시 Generic Value 체크&#xA;" Cell="[&quot;C&quot;+(DT2.Rows.IndexOf(row)+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,132" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="[(integer.Parse(row(0).ToString)+integer.Parse(row(1).ToString)).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelWriteCell>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">150,0</av:Point>
          <av:Size x:Key="ShapeSize">200,100</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="// Assign ForEach" DisplayName="어레이 선언 및 출력" sap:VirtualizedContainerService.HintSize="200,100" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="410.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[arr]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[{"VB 어레이","testing","1,2,3..."}]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="410.4,287.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arr]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="본문" sap:VirtualizedContainerService.HintSize="375.2,152.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[item]" />
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEach>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">570,115.6</av:Point>
          <av:Size x:Key="ShapeSize">200,128.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="system.Read Range로&#xA;DataTable 생성&#xA;system.Write Range로 출" DisplayName="Excel 없는 컴퓨터" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="DT_all" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadRange AddHeaders="False" DataTable="[DT_all]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="354.4,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="Sample_data\Sample Columns.xlsx">
          <ui:ReadRange.Range>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:ReadRange.Range>
        </ui:ReadRange>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="C" DataTable="[DT_all]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="354.4,22.4" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" />
        <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[DT_all]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="354.4,301.6" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304.8,152.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="263.2,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[row(2)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[(integer.Parse(row(0).ToString)+integer.Parse(row(1).ToString)).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
        <ui:WriteRange AddHeaders="False" DataTable="[DT_all]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="354.4,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="Sample Columns_answer.xlsx" />
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">360,0</av:Point>
          <av:Size x:Key="ShapeSize">200,100</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="에러발생, 글로벌핸들러 사용" DisplayName="에러처리/ 클릭 에러 만들기" sap:VirtualizedContainerService.HintSize="200,100" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'notepad.exe *제목'" sap:VirtualizedContainerService.HintSize="333.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="c" KeyModifiers="Ctrl">
          <ui:SendHotkey.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d5913ed7-0e49-4248-afce-cb5d78305ada" InformativeScreenshot="8df53f7b02f861ceb680315c3080c360" Selector="&lt;wnd app='notepad.exe' cls='Notepad' title='* - Windows 메모장' /&gt;" TimeoutMS="2000">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SendHotkey.Target>
        </ui:SendHotkey>
        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'notepad.exe *제목'" sap:VirtualizedContainerService.HintSize="333.6,156" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="v" KeyModifiers="Ctrl">
          <ui:SendHotkey.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d5913ed7-0e49-4248-afce-cb5d78305ada" InformativeScreenshot="8df53f7b02f861ceb680315c3080c360" Selector="&lt;wnd app='notepad.exe' cls='Notepad' title='* - Windows 메모장' /&gt;" TimeoutMS="2000">
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:SendHotkey.Target>
        </ui:SendHotkey>
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">150,270.4</av:Point>
          <av:Size x:Key="ShapeSize">200,112.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="문단 나눠진거 인식 못함&#xD;&#xA;이미지로 된 텍스트 못 읽음" DisplayName="PDF 읽기_Text" sap:VirtualizedContainerService.HintSize="200,112.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="str_pdf1" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="Sample_data\Text and Image PDF.pdf" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[str_pdf1]" />
        <ui:WriteTextFile DisplayName="Write Text File" FileName="Sample_data\Text and Image PDF_ByTXT.txt" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[str_pdf1]" />
      </Sequence>
    </FlowStep>
    <FlowStep>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">360,255.6</av:Point>
          <av:Size x:Key="ShapeSize">200,128.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="MS OCR 문단구분은 가능하지만 필기체 구분 못함. 전반적인 정확도 떨어짐" DisplayName="PDF 읽기_OCR" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="str_pdf_ocr" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="Sample_data\Text and Image PDF.pdf" sap:VirtualizedContainerService.HintSize="333.6,132" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[str_pdf_ocr]">
          <ui:ReadPDFWithOCR.OCREngine>
            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
              <ActivityFunc.Argument>
                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
              </ActivityFunc.Argument>
              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Scale="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_1" Image="[Image]" />
            </ActivityFunc>
          </ui:ReadPDFWithOCR.OCREngine>
        </ui:ReadPDFWithOCR>
        <ui:WriteTextFile DisplayName="Write Text File" FileName="Sample_data\Text and Image PDF_ByOCR.txt" sap:VirtualizedContainerService.HintSize="333.6,134.4" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[str_pdf_ocr]" />
      </Sequence>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">570,255.6</av:Point>
          <av:Size x:Key="ShapeSize">200,128.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="앵커 베이스 액티비티로 문자 읽기. 앵커 위치 설정해서 인접한 요소로 튀지 않게 주의" DisplayName="PDF 읽기_상대적인 위치로" sap:VirtualizedContainerService.HintSize="200,128.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="str_val" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:AnchorBase AnchorPosition="Left" DisplayName="Anchor Base" sap:VirtualizedContainerService.HintSize="724.8,200" sap2010:WorkflowViewState.IdRef="AnchorBase_1">
          <ui:AnchorBase.Action>
            <ActivityAction x:TypeArguments="ui:Anchor">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:Anchor" Name="ContextAnchor" />
              </ActivityAction.Argument>
              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'text  $0.00 USD'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="GetValue_1">
                <ui:GetValue.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e64b584f-a911-4b11-ab50-ee4857e34cf9" InformativeScreenshot="7a02aed8780316fa4abf982787b73676" Selector="&lt;ctrl role='text' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:GetValue.Target>
                <ui:GetValue.Value>
                  <OutArgument x:TypeArguments="x:String">[str_val]</OutArgument>
                </ui:GetValue.Value>
              </ui:GetValue>
            </ActivityAction>
          </ui:AnchorBase.Action>
          <ui:AnchorBase.AnchorProvider>
            <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element 'text  Credit'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
              <ui:WaitUiElementAppear.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="403062cf-f790-40fc-80bc-e0c8b964e81b" InformativeScreenshot="5f6a1dca921c86517e1dd00190dab60e" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='* - Adobe Acrobat Reader DC' /&gt;&lt;wnd aaname='문서 창' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;ctrl name='Credit   ' role='text' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:WaitUiElementAppear.Target>
            </ui:WaitUiElementAppear>
          </ui:AnchorBase.AnchorProvider>
        </ui:AnchorBase>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="724.8,60" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[str_val]" />
      </Sequence>
    </FlowStep>
  </Flowchart>
</Activity>