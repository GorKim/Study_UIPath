<Activity mc:Ignorable="sap sap2010" x:Class="Util_envGetSetAppPop" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="envApp" Type="OutArgument(s:Func(x:String, x:String, x:String))" />
    <x:Property Name="envPop" Type="OutArgument(s:Func(x:String, x:String))" />
    <x:Property Name="envSet" Type="OutArgument(s:Func(x:String, x:String, x:String))" />
    <x:Property Name="envGet" Type="OutArgument(s:Func(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>376,1088</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Util_envGetSetAppPop" sap:VirtualizedContainerService.HintSize="336,1008" sap2010:WorkflowViewState.IdRef="Sequence_18">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="envGet" Code="out_envGet = Function(str_varName As String)&#xA;&#x9;Return Environment.GetEnvironmentVariable(str_varName)&#xA;End Function" DisplayName="Invoke Code - envGet" sap:VirtualizedContainerService.HintSize="314,191" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="s:Func(x:String, x:String)" x:Key="out_envGet">[envGet]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="envSet" Code="out_envSet = Function(str_varName As String, str_Value As String)&#xA;    Environment.SetEnvironmentVariable(str_varName,str_Value)&#xA;&#x9;Return str_Value&#xA;End Function" DisplayName="Invoke Code - envSet" sap:VirtualizedContainerService.HintSize="314,191" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="s:Func(x:String, x:String, x:String)" x:Key="out_envSet">[envSet]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="envApp : append" Code="out_envApp = Function(str_varName As String, str_Value As String)&#xA;    Dim str_sep As String&#xA;&#x9;Dim str_val As String&#xA;&#x9;&#xA;&#x9;str_sep = Environment.GetEnvironmentVariable(&quot;envSep&quot;)&#xA;&#x9;If String.IsNullOrWhiteSpace(str_sep) Then &#xA;&#x9;&#x9;str_sep = &quot;:&quot;&#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(&quot;envSep&quot;,str_sep)&#xA;&#x9;End If &#xA;&#x9;&#xA;&#x9;str_val = Environment.GetEnvironmentVariable(str_varName)&#xA;&#x9;If String.IsNullOrWhiteSpace(str_val) Then&#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(str_varName,str_Value)&#xA;&#x9;Else &#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(str_varName, str_val + str_sep + str_Value)&#xA;&#x9;End If &#xA;&#x9;&#xA;    Return str_Value&#xA;End Function" DisplayName="Invoke Code - envApp" sap:VirtualizedContainerService.HintSize="314,191" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="s:Func(x:String, x:String, x:String)" x:Key="out_envApp">[envApp]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="envPop " Code="out_envPop = Function(str_varName As String)&#xA;    Dim str_sep As String&#xA;&#x9;Dim str_val As String&#xA;&#x9;Dim str_Result As String&#xA;&#x9;Dim int_index As int32&#xA;&#x9;&#x9;&#xA;&#x9;str_sep = Environment.GetEnvironmentVariable(&quot;envSep&quot;)&#xA;&#x9;If String.IsNullOrWhiteSpace(str_sep) Then &#xA;&#x9;&#x9;str_sep = &quot;:&quot;&#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(&quot;envSep&quot;,str_sep)&#xA;&#x9;End If &#xA;&#x9;&#xA;&#x9;str_val = Environment.GetEnvironmentVariable(str_varName)&#xA;&#x9;int_index = str_val.IndexOf(str_sep)&#xA;&#x9;If int_index &lt;&gt; -1 Then&#xA;&#x9;&#x9;str_Result = split(str_val,str_sep).Last.ToString&#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(str_varName,str_val.Substring(0,str_val.Count - str_Result.Count-str_sep.Count))&#xA;&#x9;&#x9;Return str_Result&#xA;&#x9;Else &#xA;&#x9;&#x9;Environment.SetEnvironmentVariable(str_varName,&quot;&quot;)&#xA;&#x9;&#x9;Return str_val &#xA;&#x9;End If &#xA;&#xA;End Function" DisplayName="Invoke Code - envPop " sap:VirtualizedContainerService.HintSize="314,191" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
      <ui:InvokeCode.Arguments>
        <OutArgument x:TypeArguments="s:Func(x:String, x:String)" x:Key="out_envPop">[envPop]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
  </Sequence>
</Activity>
